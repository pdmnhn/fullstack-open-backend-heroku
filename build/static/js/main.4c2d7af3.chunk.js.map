{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseURL","all","getAll","axios","get","then","res","data","create","newObject","post","update","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","notesToShow","filter","useEffect","noteService","allNotes","map","event","find","n","changedNote","receivedNote","catch","error","setInterval","onSubmit","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","placeholder","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"8LAUeA,EAVF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBACtD,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,Q,gBCJpCK,EAAU,aAcDC,EADH,CAAEC,OAXC,WACb,OAAOC,IAAMC,IAAIJ,GAASK,MAAK,SAACC,GAAD,OAASA,EAAIC,SAUxBC,OAPP,SAACC,GACd,OAAON,IAAMO,KAAKV,EAASS,GAAWJ,MAAK,SAACC,GAAD,OAASA,EAAIC,SAM5BI,OAHf,SAACC,EAAIH,GAClB,OAAON,IAAMU,IAAN,UAAab,EAAb,YAAwBY,GAAMH,GAAWJ,MAAK,SAACC,GAAD,OAASA,EAAIC,UCJrDO,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAGF,qBAAKlB,UAAU,QAAf,SAAwBkB,KCA3BC,EAAS,WAMb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,2GAyFSC,EAlFH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEMC,EAAcJ,EAAUJ,EAAQA,EAAMS,QAAO,SAACvC,GAAD,OAAUA,EAAKG,aAElEqC,qBAAU,WACRC,EAAYhC,SAASG,MAAK,SAAC8B,GACzBX,EAASW,QAEV,IAuCH,OACE,gCACE,uCACA,cAAC,EAAD,CAAcpB,QAASc,IACvB,8BACE,yBAAQ9B,QAAS,kBAAM6B,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGI,EAAYK,KAAI,SAAC3C,GAAD,OACf,cAAC,EAAD,CAEEA,KAAMA,EACNC,kBAlCkBkB,EAkCmBnB,EAAKmB,GAjC3C,SAACyB,GACN,IAAM5C,EAAO8B,EAAMe,MAAK,SAACC,GAAD,OAAOA,EAAE3B,KAAOA,KAClC4B,EAAW,2BAAQ/C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDsC,EACGvB,OAAOC,EAAI4B,GACXnC,MAAK,SAACoC,GACLjB,EAASD,EAAMa,KAAI,SAAC3C,GAAD,OAAWA,EAAKmB,KAAOA,EAAKnB,EAAOgD,SAEvDC,OAAM,SAACC,GACNb,EAAgB,SAAD,OACJrC,EAAKK,QADD,sCAGf8C,aAAY,kBAAMd,EAAgB,QAAO,KACzCN,EAASD,EAAMS,QAAO,SAACO,GAAD,OAAOA,EAAE3B,KAAOA,YAiB/BnB,EAAKmB,IAhCO,IAACA,OAsCxB,uBAAMiC,SAvDM,SAACR,GACfA,EAAMS,iBACN,IAAMC,EAAa,CACjBjD,QAAS2B,EACTuB,MAAM,IAAIC,MAAOC,cACjBtD,UAAWuD,KAAKC,SAAW,IAE7BlB,EAAY1B,OAAOuC,GAAY1C,MAAK,SAACoB,GACnCD,EAASD,EAAM8B,OAAO5B,IACtBC,EAAW,QA8CX,UACE,uBACE4B,YAAY,gBACZC,MAAO9B,EACP+B,SA9CiB,SAACnB,GACxBX,EAAWW,EAAMoB,OAAOF,UA+CpB,wBAAQG,KAAK,SAAb,qBAEF,cAAC,EAAD,Q,MC9FNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4c2d7af3.chunk.js","sourcesContent":["const Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import axios from \"axios\";\r\nconst baseURL = \"/api/notes\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseURL).then((res) => res.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  return axios.post(baseURL, newObject).then((res) => res.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseURL}/${id}`, newObject).then((res) => res.data);\r\n};\r\nconst all = { getAll, create, update };\r\nexport default all;\r\n","const Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className=\"error\">{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useEffect, useState } from \"react\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/notes\";\nimport Notification from \"./components/Notification\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2021\n      </em>\n    </div>\n  );\n};\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  useEffect(() => {\n    noteService.getAll().then((allNotes) => {\n      setNotes(allNotes);\n    });\n  }, []);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    };\n    noteService.create(noteObject).then((newNote) => {\n      setNotes(notes.concat(newNote));\n      setNewNote(\"\");\n    });\n  };\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const toggleImportanceOf = (id) => {\n    return (event) => {\n      const note = notes.find((n) => n.id === id);\n      const changedNote = { ...note, important: !note.important };\n\n      noteService\n        .update(id, changedNote)\n        .then((receivedNote) => {\n          setNotes(notes.map((note) => (note.id !== id ? note : receivedNote)));\n        })\n        .catch((error) => {\n          setErrorMessage(\n            `Note \"${note.content}\" was already removed from server`\n          );\n          setInterval(() => setErrorMessage(null), 5000);\n          setNotes(notes.filter((n) => n.id !== id));\n        });\n    };\n  };\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          placeholder=\"a new note...\"\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}